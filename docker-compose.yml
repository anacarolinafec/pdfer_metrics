version: '3.7'
# da setup de tudo enves de correr varios comandos. Sem ele teria de fazer docker build para cada dependencia (prometheus, ...)

services:

  pdfer:
    build:
      context: .
      dockerfile: dockerfile.yml
    container_name: pdfer
    ports:
      - "8081:8080"
    volumes:
      - type: volume
        source: nas_store
        target: /app/store
    networks:
      - backend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
    # https://github.com/vacp2p/wakurtosis/issues/58 for cadvisor issues with wsl2
    # First: sudo mkdir /mnt/windows_docker
    # Second: sudo mount -t drvfs '\\wsl$\docker-desktop-data\data\docker' /mnt/windows_docker
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'
      #- '/etc/machine-id:/etc/machine-id:ro'
      #- '/mnt/windows_docker/:/rootfs/var/lib/docker:ro'
    ports:
      - "8080:8080"
    devices:
      - /dev/kmsg:/dev/kmsg
    command:  
      - --docker_only=true
      - --disable_root_cgroup_stats=true
      #- --disable_metrics=hugetlb
      - --housekeeping_interval=30s
      - --allow_dynamic_housekeeping=true  # Permite ajuste dinâmico da coleta de métricas
      - --storage_duration=1m              # Reduz o tempo de armazenamento em memória
    privileged: true
    depends_on:
      - pdfer
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes: # interligar o pc aos ficheiros do docker
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      #pc                 docker(imagem)
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
    networks:
      - backend
  
  client: 
    image: python:3.9
    container_name: client
    volumes: 
      - ./client.py:/app/client.py
    working_dir: /app
    command: sh -c "pip install prometheus_client requests && python client.py" 
    ports:
      - "8000:8000"
    depends_on:
      - pdfer
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest  # Imagem do Grafana
    container_name: grafana  # Nome do contêiner do Grafana
    ports:
      - 3000:3000  # Porta do Grafana para o host
    volumes:
      - grafana-data:/var/lib/grafana  # Diretório de dados persistente do Grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Palavra-passe do administrador do Grafana
      - GF_SECURITY_ADMIN_USER=admin  # Nome de utilizador do administrador do Grafana
    networks:
      - backend

  # Serviço NGINX - Load Balancer
  nginx:
    image: nginx:latest
    ports:
       - "80:80"
    volumes:
       - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
       - pdfer
    networks:
       - backend

volumes:
  grafana-data:  # Volume persistente para os dados do Grafana
  nas_store:  # Volume para conexão ao XigmaNAS
    driver: local
    driver_opts:
      type: cifs
      o: username=carolina,password=xigmanas,vers=3.0,file_mode=0777,dir_mode=0777
      device: //192.168.1.250/smb01

networks:
  backend:
    driver: bridge